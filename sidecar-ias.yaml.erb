static_resources:
  listeners:
    - name: listener
      address:
        socket_address: { address: 0.0.0.0, port_value: 8080 }
      filter_chains:
        - filters:
            - name: envoy.filters.network.http_connection_manager
              typed_config:
                "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
                stat_prefix: ingress_http
                codec_type: AUTO
                route_config:
                  name: local_route
                  virtual_hosts:
                    - name: app
                      domains: ["*"]
                      routes:
                        <% for path in public_paths do %>
                        - match: { path: <%= path %> }
                          route: { cluster: app }
                          typed_per_filter_config:
                            jwtAuthn:
                              "@type": type.googleapis.com/envoy.config.route.v3.FilterConfig
                              disabled: true
                            app_tid-rbac:
                              "@type": type.googleapis.com/envoy.config.route.v3.FilterConfig
                              disabled: true
                        <% end %>
                        - match: { prefix: "/" }
                          route: { cluster: app }
                http_filters:
                  - name: jwtAuthn
                    typed_config:
                      "@type": type.googleapis.com/envoy.extensions.filters.http.jwt_authn.v3.JwtAuthentication
                      providers:
                        ias:
                          issuer: <%= ias["url"] %>
                          forward: true
                          payload_in_metadata: "jwt"
                          remote_jwks:
                            http_uri:
                              uri: <%= ias["url"] + "/oauth2/certs" %>
                              cluster: ias
                              timeout: 5s
                            cache_duration: { seconds: 600 }
                          audiences: <%= ias["clientid"] %>
                          jwt_cache_config:
                            jwt_cache_size: 100
                      rules:
                        - match:
                            prefix: /
                          requires:
                            provider_name: ias
                  - name: app_tid-rbac
                    typed_config:
                      "@type": type.googleapis.com/envoy.extensions.filters.http.rbac.v3.RBAC
                      rules:
                        action: ALLOW
                        policies:
                          "zid":
                            permissions:
                              metadata:
                                filter: envoy.filters.http.jwt_authn
                                path:
                                  - key: jwt
                                  - key: app_tid
                                value:
                                  string_match:
                                    exact: <%= ias["app_tid"] %>
                            principals:
                              - any: true
                  - name: envoy.filters.http.router
                    typed_config:
                      "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
  clusters:
    - name: app
      connect_timeout: 5s
      type: STATIC
      lb_policy: ROUND_ROBIN
      load_assignment:
        cluster_name: app
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address: { address: 127.0.0.1, port_value: <%=port%> }
    - name: ias
      connect_timeout: 10s
      type: LOGICAL_DNS
      load_assignment:
        cluster_name: ias
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address: { address: <%= ias_host %>, port_value: 443 }
      transport_socket:
        name: envoy.transport_sockets.tls
        typed_config:
          "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext
          sni: <%= ias_host %>
          common_tls_context:
            validation_context:
              trusted_ca: { filename: /etc/ssl/certs/ca-certificates.crt }
overload_manager:
  resource_monitors:
  - name: "envoy.resource_monitors.global_downstream_max_connections"
    typed_config:
      "@type": type.googleapis.com/envoy.extensions.resource_monitors.downstream_connections.v3.DownstreamConnectionsConfig
      max_active_downstream_connections: <%= max_downstream_con %>